#transition matrix
P <- matrix(rep(1/k, k*k), nrow = k)
#emission matrix:  here I used a Gaussian distribution, replace muEst and sigmaEst by your initial estimates of mean and variance
muVec <- c(1:k)
sigmaVec <- c(1:k)
muVec <- c(0.5524873, 0.2845865, 1.0602606, 1.5037668, 1.8758301, 0.5821289, 2.9686442, 0.4542151, 1.0638016, 0.1828660, 4.6151657, 2.4982408)
sigmaVec <- c(0.0009272446, 0.0032169062, 0.3266580994, 0.0276333851, 0.0928224313, 0.0323386446, 0.4991893241, 0.0013492624, 0.0513741970,
0.0034982052, 1.0756337772, 0.0480262064)
muVec[11] <- muVec[11] * 0.25
sigmaVec[11] <- sigmaVec[11] * 0.25
b <- list(mu = muVec, sigma = sigmaVec)
#starting model for EM
startmodel <- hmmspec(init = init, trans = P, parms.emis = b, dens.emis = dnorm.hsmm)
startmodel
#EM algorithm fits an HMM to the data
hmm <- hmmfit(traindayform$x, startmodel , mstep = mstep.norm,maxit = 200,tol=1e-02)
#print resulting HMM parameters
summary(hmm)
plot(hmm$loglik, type="b", ylab="log-likelihood", xlab="Iteration")
#yhat1 <- predict (hmm,traindayform$x)
#yhat2 <- predict (hmm,test1form$x)
#plot(yhat1)
#plot(yhat2)
hmm$loglik[length(hmm$loglik)]
k=12
#init probabilities
init <- rep(1/k, k)
#transition matrix
P <- matrix(rep(1/k, k*k), nrow = k)
#emission matrix:  here I used a Gaussian distribution, replace muEst and sigmaEst by your initial estimates of mean and variance
muVec <- c(1:k)
sigmaVec <- c(1:k)
muVec <- c(0.5524873, 0.2845865, 1.0602606, 1.5037668, 1.8758301, 0.5821289, 2.9686442, 0.4542151, 1.0638016, 0.1828660, 4.6151657, 2.4982408)
sigmaVec <- c(0.0009272446, 0.0032169062, 0.3266580994, 0.0276333851, 0.0928224313, 0.0323386446, 0.4991893241, 0.0013492624, 0.0513741970,
0.0034982052, 1.0756337772, 0.0480262064)
muVec[10] <- muVec[10] * 0.25
sigmaVec[10] <- sigmaVec[10] * 0.25
b <- list(mu = muVec, sigma = sigmaVec)
#starting model for EM
startmodel <- hmmspec(init = init, trans = P, parms.emis = b, dens.emis = dnorm.hsmm)
startmodel
#EM algorithm fits an HMM to the data
hmm <- hmmfit(traindayform$x, startmodel , mstep = mstep.norm,maxit = 200,tol=1e-02)
#print resulting HMM parameters
summary(hmm)
plot(hmm$loglik, type="b", ylab="log-likelihood", xlab="Iteration")
#yhat1 <- predict (hmm,traindayform$x)
#yhat2 <- predict (hmm,test1form$x)
#plot(yhat1)
#plot(yhat2)
hmm$loglik[length(hmm$loglik)]
k=12
#init probabilities
init <- rep(1/k, k)
#transition matrix
P <- matrix(rep(1/k, k*k), nrow = k)
#emission matrix:  here I used a Gaussian distribution, replace muEst and sigmaEst by your initial estimates of mean and variance
muVec <- c(1:k)
sigmaVec <- c(1:k)
muVec <- c(0.5524873, 0.2845865, 1.0602606, 1.5037668, 1.8758301, 0.5821289, 2.9686442, 0.4542151, 1.0638016, 0.1828660, 4.6151657, 2.4982408)
sigmaVec <- c(0.0009272446, 0.0032169062, 0.3266580994, 0.0276333851, 0.0928224313, 0.0323386446, 0.4991893241, 0.0013492624, 0.0513741970,
0.0034982052, 1.0756337772, 0.0480262064)
muVec[7] <- muVec[7] * 0.25
sigmaVec[7] <- sigmaVec[7] * 0.25
b <- list(mu = muVec, sigma = sigmaVec)
#starting model for EM
startmodel <- hmmspec(init = init, trans = P, parms.emis = b, dens.emis = dnorm.hsmm)
startmodel
#EM algorithm fits an HMM to the data
hmm <- hmmfit(traindayform$x, startmodel , mstep = mstep.norm,maxit = 200,tol=1e-02)
#print resulting HMM parameters
summary(hmm)
plot(hmm$loglik, type="b", ylab="log-likelihood", xlab="Iteration")
#yhat1 <- predict (hmm,traindayform$x)
#yhat2 <- predict (hmm,test1form$x)
#plot(yhat1)
#plot(yhat2)
hmm$loglik[length(hmm$loglik)]
tmp <- with(minutes, minutes[(hour(DateTime) >= 23 | hour(DateTime) <= 5) &
(month(DateTime) >= 10 | month(DateTime) <= 3)])
View(minutes)
View(minutes)
tmp <- with(minutes, minutes[(hour(Date) >= 23 | hour(Date) <= 5) &
(month(Date) >= 10 | month(Date) <= 3)])
tmp <- with(minutes, minutes[(hour(Date) >= 23 | hour(Date) <= 5) &
(month(Date) >= 10 | month(Date) <= 3), ])
View(tmp)
View(tmp)
mu <- mean(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[(hour(Date) >= 1 | (hour(Date) <= 5 & minute(Date) <= 30)) &
(month(Date) >= 10 | month(Date) <= 3), ])
mu <- mean(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[(hour(Date) >= 1 & (hour(Date) <= 5 & minute(Date) <= 30)) &
(month(Date) >= 10 | month(Date) <= 3), ])
mu <- mean(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[(hour(Date) >= 1 & (hour(Date) <= 5 & minute(Date) <= 30)) &
(month(Date) >= 10 | month(Date) <= 3), ])
muVec[1] <- mean(tmp$Global_active_power, na.rm = TRUE)
sigmaVec[1] <- var(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[(hour(Date) >= 1 & (hour(Date) <= 5 & minute(Date) <= 30)) &
(month(Date) < 10 & month(Date) > 3), ])
muVec[2] <- mean(tmp$Global_active_power, na.rm = TRUE)
sigmaVec[2] <- var(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[(hour(Date) >= 7 & (hour(Date) <= 9 & minute(Date) <= 30)) &
(month(Date) < 10 & month(Date) > 3), ])
muVec[3] <- mean(tmp$Global_active_power, na.rm = TRUE)
sigmaVec[3] <- var(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[(hour(Date) >= 7 & (hour(Date) <= 9 & minute(Date) <= 30)) &
(month(Date) >= 10 | month(Date) <= 3), ])
muVec[4] <- mean(tmp$Global_active_power, na.rm = TRUE)
sigmaVec[4] <- var(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[(hour(Date) >= 10 & (hour(Date) < 12 & minute(Date) <= 30)) &
(month(Date) < 10 & month(Date) > 3), ])
muVec[5] <- mean(tmp$Global_active_power, na.rm = TRUE)
sigmaVec[5] <- var(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[(hour(Date) >= 10 & (hour(Date) < 12 & minute(Date) <= 30)) &
(month(Date) >= 10 | month(Date) <= 3), ])
muVec[6] <- mean(tmp$Global_active_power, na.rm = TRUE)
sigmaVec[6] <- var(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[(hour(Date) >= 12 & (hour(Date) <= 14 & minute(Date) <= 30)) &
(month(Date) < 10 & month(Date) > 3), ])
muVec[7] <- mean(tmp$Global_active_power, na.rm = TRUE)
sigmaVec[7] <- var(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[(hour(Date) >= 12 & (hour(Date) <= 14 & minute(Date) <= 30)) &
(month(Date) >= 10 | month(Date) <= 3), ])
muVec[8] <- mean(tmp$Global_active_power, na.rm = TRUE)
sigmaVec[8] <- var(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[(hour(Date) >= 14 & (hour(Date) <= 17)) &
(month(Date) < 10 & month(Date) > 3), ])
muVec[9] <- mean(tmp$Global_active_power, na.rm = TRUE)
sigmaVec[9] <- var(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[(hour(Date) >= 16 & (hour(Date) <= 17)) &
(month(Date) >= 10 | month(Date) <= 3), ])
muVec[10] <- mean(tmp$Global_active_power, na.rm = TRUE)
sigmaVec[10] <- var(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[(hour(Date) >= 16 & (hour(Date) <= 17)) &
(month(Date) < 10 & month(Date) > 3), ])
muVec[9] <- mean(tmp$Global_active_power, na.rm = TRUE)
sigmaVec[9] <- var(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[(hour(Date) >= 16 & (hour(Date) <= 17)) &
(month(Date) >= 10 | month(Date) <= 3), ])
muVec[10] <- mean(tmp$Global_active_power, na.rm = TRUE)
sigmaVec[10] <- var(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[(hour(Date) >= 18 & (hour(Date) <= 22)) &
(month(Date) < 10 & month(Date) > 3), ])
muVec[11] <- mean(tmp$Global_active_power, na.rm = TRUE)
sigmaVec[11] <- var(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[(hour(Date) >= 18 & (hour(Date) <= 22)) &
(month(Date) >= 10 | month(Date) <= 3), ])
muVec[12] <- mean(tmp$Global_active_power, na.rm = TRUE)
sigmaVec[12] <- var(tmp$Global_active_power, na.rm = TRUE)
muVec
sigmaVec
b <- list(mu = muVec, sigma = sigmaVec)
#starting model for EM
startmodel <- hmmspec(init = init, trans = P, parms.emis = b, dens.emis = dnorm.hsmm)
startmodel
#EM algorithm fits an HMM to the data
hmm <- hmmfit(traindayform$x, startmodel , mstep = mstep.norm,maxit = 200,tol=1e-02)
#print resulting HMM parameters
summary(hmm)
plot(hmm$loglik, type="b", ylab="log-likelihood", xlab="Iteration")
#yhat1 <- predict (hmm,traindayform$x)
#yhat2 <- predict (hmm,test1form$x)
#plot(yhat1)
#plot(yhat2)
hmm$loglik[length(hmm$loglik)]
muVec <- c(0.4707284, 0.3359154, 1.4989581, 3.2925345, 1.2336820, 2.1039585, 0.8995569, 2.6243250, 0.7120068, 1.8815004, 1.7460537, 4.8293258)
sigmaVec <- c(0.02013385, 0.02111120, 0.02252433, 0.43364921, 0.02197578, 0.03820166, 0.20083991, 0.07964086, 0.03200034, 0.42940238,
0.03190309, 1.09475070)
muVec[3] <- muVec[3] * 0.15
sigmaVec[3] <- sigmaVec[3] * 0.15
b <- list(mu = muVec, sigma = sigmaVec)
#starting model for EM
startmodel <- hmmspec(init = init, trans = P, parms.emis = b, dens.emis = dnorm.hsmm)
startmodel
#EM algorithm fits an HMM to the data
hmm <- hmmfit(traindayform$x, startmodel , mstep = mstep.norm,maxit = 200,tol=1e-02)
#print resulting HMM parameters
summary(hmm)
plot(hmm$loglik, type="b", ylab="log-likelihood", xlab="Iteration")
#yhat1 <- predict (hmm,traindayform$x)
#yhat2 <- predict (hmm,test1form$x)
#plot(yhat1)
#plot(yhat2)
hmm$loglik[length(hmm$loglik)]
library(mhsmm)
library(dplyr)
library(lubridate)
muVec <- c(0.4707284, 0.3359154, 1.4989581, 3.2925345, 1.2336820, 2.1039585, 0.8995569, 2.6243250, 0.7120068, 1.8815004, 1.7460537, 4.8293258)
sigmaVec <- c(0.02013385, 0.02111120, 0.02252433, 0.43364921, 0.02197578, 0.03820166, 0.20083991, 0.07964086, 0.03200034, 0.42940238,
0.03190309, 1.09475070)
muVec[3] <- muVec[3] * 0.15
sigmaVec[3] <- sigmaVec[3] * 0.15
b <- list(mu = muVec, sigma = sigmaVec)
#starting model for EM
startmodel <- hmmspec(init = init, trans = P, parms.emis = b, dens.emis = dnorm.hsmm)
startmodel
#EM algorithm fits an HMM to the data
hmm <- hmmfit(traindayform$x, startmodel , mstep = mstep.norm,maxit = 200,tol=1e-02)
#print resulting HMM parameters
summary(hmm)
plot(hmm$loglik, type="b", ylab="log-likelihood", xlab="Iteration")
#yhat1 <- predict (hmm,traindayform$x)
#yhat2 <- predict (hmm,test1form$x)
#plot(yhat1)
#plot(yhat2)
hmm$loglik[length(hmm$loglik)]
muVec <- c(0.5484832, 0.3271606, 0.2719592, 3.1713822, 1.2757978, 1.8831006, 0.8581603, 2.4676883, 0.5519891, 1.8237814, 1.5377176, 4.7048570)
sigmaVec <- c(0.0008257707, 0.0202114701, 0.0029434861, 0.3858464933, 0.0210970072, 0.0460559523, 0.1301456018, 0.0741345796, 0.0252060821,
0.4619841991, 0.0251711090, 1.0975356331)
muVec[9] <- muVec[9] * 1.1
sigmaVec[9] <- sigmaVec[9] * 1.1
b <- list(mu = muVec, sigma = sigmaVec)
#starting model for EM
startmodel <- hmmspec(init = init, trans = P, parms.emis = b, dens.emis = dnorm.hsmm)
startmodel
#EM algorithm fits an HMM to the data
hmm <- hmmfit(traindayform$x, startmodel, mstep = mstep.norm,maxit = 200, tol=1e-02)
#print resulting HMM parameters
summary(hmm)
plot(hmm$loglik, type="b", ylab="log-likelihood", xlab="Iteration")
#yhat1 <- predict (hmm,traindayform$x)
#yhat2 <- predict (hmm,test1form$x)
#plot(yhat1)
#plot(yhat2)
hmm$loglik[length(hmm$loglik)]
muVec <- c(0.5484832, 0.3271606, 0.2719592, 3.1713822, 1.2757978, 1.8831006, 0.8581603, 2.4676883, 0.5519891, 1.8237814, 1.5377176, 4.7048570)
sigmaVec <- c(0.0008257707, 0.0202114701, 0.0029434861, 0.3858464933, 0.0210970072, 0.0460559523, 0.1301456018, 0.0741345796, 0.0252060821,
0.4619841991, 0.0251711090, 1.0975356331)
muVec[3] <- muVec[3] * 0.65
sigmaVec[3] <- sigmaVec[3] * 0.65
b <- list(mu = muVec, sigma = sigmaVec)
#starting model for EM
startmodel <- hmmspec(init = init, trans = P, parms.emis = b, dens.emis = dnorm.hsmm)
startmodel
#EM algorithm fits an HMM to the data
hmm <- hmmfit(traindayform$x, startmodel, mstep = mstep.norm,maxit = 200, tol=1e-02)
#print resulting HMM parameters
summary(hmm)
plot(hmm$loglik, type="b", ylab="log-likelihood", xlab="Iteration")
#yhat1 <- predict (hmm,traindayform$x)
#yhat2 <- predict (hmm,test1form$x)
#plot(yhat1)
#plot(yhat2)
hmm$loglik[length(hmm$loglik)]
muVec <- c(0.5484832, 0.3271606, 0.2719592, 3.1713822, 1.2757978, 1.8831006, 0.8581603, 2.4676883, 0.5519891, 1.8237814, 1.5377176, 4.7048570)
sigmaVec <- c(0.0008257707, 0.0202114701, 0.0029434861, 0.3858464933, 0.0210970072, 0.0460559523, 0.1301456018, 0.0741345796, 0.0252060821,
0.4619841991, 0.0251711090, 1.0975356331)
muVec[3] <- muVec[3] * 0.5
sigmaVec[3] <- sigmaVec[3] * 0.5
b <- list(mu = muVec, sigma = sigmaVec)
#starting model for EM
startmodel <- hmmspec(init = init, trans = P, parms.emis = b, dens.emis = dnorm.hsmm)
startmodel
#EM algorithm fits an HMM to the data
hmm <- hmmfit(traindayform$x, startmodel, mstep = mstep.norm,maxit = 200, tol=1e-02)
#print resulting HMM parameters
summary(hmm)
plot(hmm$loglik, type="b", ylab="log-likelihood", xlab="Iteration")
#yhat1 <- predict (hmm,traindayform$x)
#yhat2 <- predict (hmm,test1form$x)
#plot(yhat1)
#plot(yhat2)
hmm$loglik[length(hmm$loglik)]
muVec <- c(0.5484832, 0.3271606, 0.2719592, 3.1713822, 1.2757978, 1.8831006, 0.8581603, 2.4676883, 0.5519891, 1.8237814, 1.5377176, 4.7048570)
sigmaVec <- c(0.0008257707, 0.0202114701, 0.0029434861, 0.3858464933, 0.0210970072, 0.0460559523, 0.1301456018, 0.0741345796, 0.0252060821,
0.4619841991, 0.0251711090, 1.0975356331)
muVec[4] <- muVec[1]
sigmaVec[4] <- sigmaVec[1]
b <- list(mu = muVec, sigma = sigmaVec)
#starting model for EM
startmodel <- hmmspec(init = init, trans = P, parms.emis = b, dens.emis = dnorm.hsmm)
startmodel
#EM algorithm fits an HMM to the data
hmm <- hmmfit(traindayform$x, startmodel, mstep = mstep.norm,maxit = 200, tol=1e-02)
#print resulting HMM parameters
summary(hmm)
plot(hmm$loglik, type="b", ylab="log-likelihood", xlab="Iteration")
#yhat1 <- predict (hmm,traindayform$x)
#yhat2 <- predict (hmm,test1form$x)
#plot(yhat1)
#plot(yhat2)
hmm$loglik[length(hmm$loglik)]
muVec <- c(0.5484832, 0.3271606, 0.2719592, 3.1713822, 1.2757978, 1.8831006, 0.8581603, 2.4676883, 0.5519891, 1.8237814, 1.5377176, 4.7048570)
sigmaVec <- c(0.0008257707, 0.0202114701, 0.0029434861, 0.3858464933, 0.0210970072, 0.0460559523, 0.1301456018, 0.0741345796, 0.0252060821,
0.4619841991, 0.0251711090, 1.0975356331)
muVec[7] <- muVec[7] * 0.8
sigmaVec[7] <- sigmaVec[7] * 0.8
b <- list(mu = muVec, sigma = sigmaVec)
#starting model for EM
startmodel <- hmmspec(init = init, trans = P, parms.emis = b, dens.emis = dnorm.hsmm)
startmodel
#EM algorithm fits an HMM to the data
hmm <- hmmfit(traindayform$x, startmodel, mstep = mstep.norm,maxit = 200, tol=1e-02)
#print resulting HMM parameters
summary(hmm)
plot(hmm$loglik, type="b", ylab="log-likelihood", xlab="Iteration")
#yhat1 <- predict (hmm,traindayform$x)
#yhat2 <- predict (hmm,test1form$x)
#plot(yhat1)
#plot(yhat2)
hmm$loglik[length(hmm$loglik)]
k=10
#init probabilities
init <- rep(1/k, k)
#transition matrix
P <- matrix(rep(1/k, k*k), nrow = k)
#emission matrix:  here I used a Gaussian distribution, replace muEst and sigmaEst by your initial estimates of mean and variance
muVec <- c(1:k)
sigmaVec <- c(1:k)
tmp <- with(minutes, minutes[(hour(Date) >= 1 & (hour(Date) <= 5 & minute(Date) <= 30)) &
(month(Date) >= 10 | month(Date) <= 3), ])
muVec[1] <- mean(tmp$Global_active_power, na.rm = TRUE)
sigmaVec[1] <- var(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[(hour(Date) >= 1 & (hour(Date) <= 5 & minute(Date) <= 30)) &
(month(Date) < 10 & month(Date) > 3), ])
muVec[2] <- mean(tmp$Global_active_power, na.rm = TRUE)
sigmaVec[2] <- var(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[(hour(Date) >= 7 & (hour(Date) <= 9 & minute(Date) <= 30)) &
(month(Date) < 10 & month(Date) > 3), ])
muVec[3] <- mean(tmp$Global_active_power, na.rm = TRUE)
sigmaVec[3] <- var(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[(hour(Date) >= 7 & (hour(Date) <= 9 & minute(Date) <= 30)) &
(month(Date) >= 10 | month(Date) <= 3), ])
muVec[4] <- mean(tmp$Global_active_power, na.rm = TRUE)
sigmaVec[4] <- var(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[(hour(Date) >= 11 & (hour(Date) <= 14 & minute(Date) <= 30)) &
(month(Date) < 10 & month(Date) > 3), ])
muVec[7] <- mean(tmp$Global_active_power, na.rm = TRUE)
sigmaVec[7] <- var(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[(hour(Date) >= 11 & (hour(Date) <= 14 & minute(Date) <= 30)) &
(month(Date) >= 10 | month(Date) <= 3), ])
muVec[8] <- mean(tmp$Global_active_power, na.rm = TRUE)
sigmaVec[8] <- var(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[(hour(Date) >= 16 & (hour(Date) <= 17)) &
(month(Date) < 10 & month(Date) > 3), ])
muVec[9] <- mean(tmp$Global_active_power, na.rm = TRUE)
sigmaVec[9] <- var(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[(hour(Date) >= 16 & (hour(Date) <= 17)) &
(month(Date) >= 10 | month(Date) <= 3), ])
muVec[10] <- mean(tmp$Global_active_power, na.rm = TRUE)
sigmaVec[10] <- var(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[(hour(Date) >= 18 & (hour(Date) <= 22)) &
(month(Date) < 10 & month(Date) > 3), ])
muVec[5] <- mean(tmp$Global_active_power, na.rm = TRUE)
sigmaVec[5] <- var(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[(hour(Date) >= 18 & (hour(Date) <= 22)) &
(month(Date) >= 10 | month(Date) <= 3), ])
muVec[6] <- mean(tmp$Global_active_power, na.rm = TRUE)
sigmaVec[6] <- var(tmp$Global_active_power, na.rm = TRUE)
#muVec <- c(0.5484832, 0.3271606, 0.2719592, 3.1713822, 1.2757978, 1.8831006, 0.8581603, 2.4676883, 0.5519891, 1.8237814, 1.5377176, 4.7048570)
#sigmaVec <- c(0.0008257707, 0.0202114701, 0.0029434861, 0.3858464933, 0.0210970072, 0.0460559523, 0.1301456018, 0.0741345796, 0.0252060821,
#              0.4619841991, 0.0251711090, 1.0975356331)
b <- list(mu = muVec, sigma = sigmaVec)
#starting model for EM
startmodel <- hmmspec(init = init, trans = P, parms.emis = b, dens.emis = dnorm.hsmm)
startmodel
#EM algorithm fits an HMM to the data
hmm <- hmmfit(traindayform$x, startmodel, mstep = mstep.norm,maxit = 200, tol=1e-02)
#print resulting HMM parameters
summary(hmm)
plot(hmm$loglik, type="b", ylab="log-likelihood", xlab="Iteration")
#yhat1 <- predict (hmm,traindayform$x)
#yhat2 <- predict (hmm,test1form$x)
#plot(yhat1)
#plot(yhat2)
hmm$loglik[length(hmm$loglik)]
muVec <- c(0.5665631, 0.3819981, 1.2712204, 3.1746383, 1.8819947, 4.7048273, 1.8407279, 2.4678701, 0.8487608, 1.5365708)
sigmaVec <- c(0.02429599, 0.02246806, 0.02147041, 0.38306194, 0.04594231, 1.09857186, 0.46066432, 0.07365716, 0.14186642, 0.02523937)
muVec[10] <- muVec[10] * 0.5
sigmaVec[10] <- sigmaVec[10] * 0.5
b <- list(mu = muVec, sigma = sigmaVec)
#starting model for EM
startmodel <- hmmspec(init = init, trans = P, parms.emis = b, dens.emis = dnorm.hsmm)
startmodel
#EM algorithm fits an HMM to the data
hmm <- hmmfit(traindayform$x, startmodel, mstep = mstep.norm,maxit = 200, tol=1e-02)
#print resulting HMM parameters
summary(hmm)
plot(hmm$loglik, type="b", ylab="log-likelihood", xlab="Iteration")
#yhat1 <- predict (hmm,traindayform$x)
#yhat2 <- predict (hmm,test1form$x)
#plot(yhat1)
#plot(yhat2)
hmm$loglik[length(hmm$loglik)]
muVec <- c(0.3271606, 0.2719592, 3.1713822, 1.2757978, 1.8831006, 0.8581603, 2.4676883, 0.5519891, 1.5377176, 4.7048570)
sigmaVec <- c(0.0202114701, 0.0029434861, 0.3858464933, 0.0210970072, 0.0460559523, 0.1301456018, 0.0741345796, 0.0252060821,
0.0251711090, 1.0975356331)
muVec[10] <- muVec[10] * 0.5
sigmaVec[10] <- sigmaVec[10] * 0.5
b <- list(mu = muVec, sigma = sigmaVec)
#starting model for EM
startmodel <- hmmspec(init = init, trans = P, parms.emis = b, dens.emis = dnorm.hsmm)
startmodel
#EM algorithm fits an HMM to the data
hmm <- hmmfit(traindayform$x, startmodel, mstep = mstep.norm,maxit = 200, tol=1e-02)
#print resulting HMM parameters
summary(hmm)
plot(hmm$loglik, type="b", ylab="log-likelihood", xlab="Iteration")
#yhat1 <- predict (hmm,traindayform$x)
#yhat2 <- predict (hmm,test1form$x)
#plot(yhat1)
#plot(yhat2)
hmm$loglik[length(hmm$loglik)]
muVec <- c(0.3325711, 0.2737631, 4.1893952, 1.0651559, 1.9055879, 0.5787271, 2.6480388, 0.5503066, 1.5057449, 1.8831006)
sigmaVec <- c(0.0200251118, 0.0029875129, 1.1138264793, 0.0507857485, 0.0919866822, 0.0317043043, 0.3432551789, 0.0008828338, 0.0280480332,
0.0460559523)
b <- list(mu = muVec, sigma = sigmaVec)
#starting model for EM
startmodel <- hmmspec(init = init, trans = P, parms.emis = b, dens.emis = dnorm.hsmm)
startmodel
#EM algorithm fits an HMM to the data
hmm <- hmmfit(traindayform$x, startmodel, mstep = mstep.norm,maxit = 200, tol=1e-02)
#print resulting HMM parameters
summary(hmm)
plot(hmm$loglik, type="b", ylab="log-likelihood", xlab="Iteration")
#yhat1 <- predict (hmm,traindayform$x)
#yhat2 <- predict (hmm,test1form$x)
#plot(yhat1)
#plot(yhat2)
hmm$loglik[length(hmm$loglik)]
muVec <- c(1:k)
sigmaVec <- c(1:k)
muVec <- c(0.3301653, 0.2730533, 4.5924386, 0.8581603, 2.1744369, 0.5679845, 3.1150939, 0.5493970, 1.4742556, 1.7928395)
sigmaVec <- c(0.0201126908, 0.0029628074, 1.1349055417, 0.1301456018, 0.2770119212, 0.0291640563, 0.3368303610, 0.0008511606, 0.0262214028,
0.0424565463)
b <- list(mu = muVec, sigma = sigmaVec)
#starting model for EM
startmodel <- hmmspec(init = init, trans = P, parms.emis = b, dens.emis = dnorm.hsmm)
startmodel
#EM algorithm fits an HMM to the data
hmm <- hmmfit(traindayform$x, startmodel, mstep = mstep.norm,maxit = 200, tol=1e-02)
#print resulting HMM parameters
summary(hmm)
plot(hmm$loglik, type="b", ylab="log-likelihood", xlab="Iteration")
#yhat1 <- predict (hmm,traindayform$x)
#yhat2 <- predict (hmm,test1form$x)
#plot(yhat1)
#plot(yhat2)
hmm$loglik[length(hmm$loglik)]
k=11
#init probabilities
init <- rep(1/k, k)
#transition matrix
P <- matrix(rep(1/k, k*k), nrow = k)
#emission matrix:  here I used a Gaussian distribution, replace muEst and sigmaEst by your initial estimates of mean and variance
muVec <- c(1:k)
sigmaVec <- c(1:k)
muVec <- c(0.5484832, 0.3271606, 0.2719592, 3.1713822, 1.2757978, 1.8831006, 0.8581603, 2.4676883, 0.5519891, 1.5377176, 4.7048570)
sigmaVec <- c(0.0008257707, 0.0202114701, 0.0029434861, 0.3858464933, 0.0210970072, 0.0460559523, 0.0741345796, 0.0252060821, 0.4619841991,
0.0251711090, 1.0975356331)
b <- list(mu = muVec, sigma = sigmaVec)
#starting model for EM
startmodel <- hmmspec(init = init, trans = P, parms.emis = b, dens.emis = dnorm.hsmm)
startmodel
#EM algorithm fits an HMM to the data
hmm <- hmmfit(traindayform$x, startmodel, mstep = mstep.norm,maxit = 200, tol=1e-02)
#print resulting HMM parameters
summary(hmm)
plot(hmm$loglik, type="b", ylab="log-likelihood", xlab="Iteration")
#yhat1 <- predict (hmm,traindayform$x)
#yhat2 <- predict (hmm,test1form$x)
#plot(yhat1)
#plot(yhat2)
hmm$loglik[length(hmm$loglik)]
k=13
#init probabilities
init <- rep(1/k, k)
#transition matrix
P <- matrix(rep(1/k, k*k), nrow = k)
#emission matrix:  here I used a Gaussian distribution, replace muEst and sigmaEst by your initial estimates of mean and variance
muVec <- c(1:k)
sigmaVec <- c(1:k)
muVec <- c(0.5484832, 0.3271606, 0.2719592, 3.1713822, 1.2757978, 1.8831006, 0.8581603, 2.4676883, 0.5519891, 1.8237814, 1.5377176, 4.7048570,
0.9816549)
sigmaVec <- c(0.0008257707, 0.0202114701, 0.0029434861, 0.3858464933, 0.0210970072, 0.0460559523, 0.1301456018, 0.0741345796, 0.0252060821,
0.4619841991, 0.0251711090, 1.0975356331, 0.1535219979)
b <- list(mu = muVec, sigma = sigmaVec)
#starting model for EM
startmodel <- hmmspec(init = init, trans = P, parms.emis = b, dens.emis = dnorm.hsmm)
startmodel
#EM algorithm fits an HMM to the data
hmm_13 <- hmmfit(traindayform$x, startmodel, mstep = mstep.norm,maxit = 200, tol=1e-02)
#print resulting HMM parameters
summary(hmm_13)
plot(hmm_13$loglik, type="b", ylab="log-likelihood", xlab="Iteration")
#yhat1 <- predict (hmm_13,traindayform$x)
#yhat2 <- predict (hmm_13,test1form$x)
#plot(yhat1)
#plot(yhat2)
hmm_13$loglik[length(hmm_13$loglik)]
muVec <- c(0.5484832, 0.3271606, 0.2719592, 3.1713822, 1.2757978, 1.8831006, 0.8581603, 2.4676883, 0.5519891, 1.8237814, 1.5377176, 4.7048570,
0.9816549)
sigmaVec <- c(0.0008257707, 0.0202114701, 0.0029434861, 0.3858464933, 0.0210970072, 0.0460559523, 0.1301456018, 0.0741345796, 0.0252060821,
0.4619841991, 0.0251711090, 1.0975356331, 0.1535219979)
muVec[13] <- muVec[13] * 0.15
sigmaVec[13] <- sigmaVec[13] * 0.15
b <- list(mu = muVec, sigma = sigmaVec)
#starting model for EM
startmodel <- hmmspec(init = init, trans = P, parms.emis = b, dens.emis = dnorm.hsmm)
startmodel
#EM algorithm fits an HMM to the data
hmm_13 <- hmmfit(traindayform$x, startmodel, mstep = mstep.norm,maxit = 200, tol=1e-02)
#print resulting HMM parameters
summary(hmm_13)
plot(hmm_13$loglik, type="b", ylab="log-likelihood", xlab="Iteration")
#yhat1 <- predict (hmm_13,traindayform$x)
#yhat2 <- predict (hmm_13,test1form$x)
#plot(yhat1)
#plot(yhat2)
hmm_13$loglik[length(hmm_13$loglik)]
