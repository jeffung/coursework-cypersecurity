startmodel
#EM algorithm fits an HMM to the data
hmm <- hmmfit(traindayform$x, startmodel, mstep = mstep.norm,maxit = 200, tol=1e-02)
#print resulting HMM parameters
summary(hmm)
plot(hmm$loglik, type="b", ylab="log-likelihood", xlab="Iteration")
#yhat1 <- predict (hmm,traindayform$x)
#yhat2 <- predict (hmm,test1form$x)
#plot(yhat1)
#plot(yhat2)
hmm$loglik[length(hmm$loglik)]
muVec <- c(0.3271606, 0.2719592, 3.1713822, 1.2757978, 1.8831006, 0.8581603, 2.4676883, 0.5519891, 1.5377176, 4.7048570)
sigmaVec <- c(0.0202114701, 0.0029434861, 0.3858464933, 0.0210970072, 0.0460559523, 0.1301456018, 0.0741345796, 0.0252060821,
0.0251711090, 1.0975356331)
muVec[10] <- muVec[10] * 0.5
sigmaVec[10] <- sigmaVec[10] * 0.5
b <- list(mu = muVec, sigma = sigmaVec)
#starting model for EM
startmodel <- hmmspec(init = init, trans = P, parms.emis = b, dens.emis = dnorm.hsmm)
startmodel
#EM algorithm fits an HMM to the data
hmm <- hmmfit(traindayform$x, startmodel, mstep = mstep.norm,maxit = 200, tol=1e-02)
#print resulting HMM parameters
summary(hmm)
plot(hmm$loglik, type="b", ylab="log-likelihood", xlab="Iteration")
#yhat1 <- predict (hmm,traindayform$x)
#yhat2 <- predict (hmm,test1form$x)
#plot(yhat1)
#plot(yhat2)
hmm$loglik[length(hmm$loglik)]
muVec <- c(0.3325711, 0.2737631, 4.1893952, 1.0651559, 1.9055879, 0.5787271, 2.6480388, 0.5503066, 1.5057449, 1.8831006)
sigmaVec <- c(0.0200251118, 0.0029875129, 1.1138264793, 0.0507857485, 0.0919866822, 0.0317043043, 0.3432551789, 0.0008828338, 0.0280480332,
0.0460559523)
b <- list(mu = muVec, sigma = sigmaVec)
#starting model for EM
startmodel <- hmmspec(init = init, trans = P, parms.emis = b, dens.emis = dnorm.hsmm)
startmodel
#EM algorithm fits an HMM to the data
hmm <- hmmfit(traindayform$x, startmodel, mstep = mstep.norm,maxit = 200, tol=1e-02)
#print resulting HMM parameters
summary(hmm)
plot(hmm$loglik, type="b", ylab="log-likelihood", xlab="Iteration")
#yhat1 <- predict (hmm,traindayform$x)
#yhat2 <- predict (hmm,test1form$x)
#plot(yhat1)
#plot(yhat2)
hmm$loglik[length(hmm$loglik)]
muVec <- c(1:k)
sigmaVec <- c(1:k)
muVec <- c(0.3301653, 0.2730533, 4.5924386, 0.8581603, 2.1744369, 0.5679845, 3.1150939, 0.5493970, 1.4742556, 1.7928395)
sigmaVec <- c(0.0201126908, 0.0029628074, 1.1349055417, 0.1301456018, 0.2770119212, 0.0291640563, 0.3368303610, 0.0008511606, 0.0262214028,
0.0424565463)
b <- list(mu = muVec, sigma = sigmaVec)
#starting model for EM
startmodel <- hmmspec(init = init, trans = P, parms.emis = b, dens.emis = dnorm.hsmm)
startmodel
#EM algorithm fits an HMM to the data
hmm <- hmmfit(traindayform$x, startmodel, mstep = mstep.norm,maxit = 200, tol=1e-02)
#print resulting HMM parameters
summary(hmm)
plot(hmm$loglik, type="b", ylab="log-likelihood", xlab="Iteration")
#yhat1 <- predict (hmm,traindayform$x)
#yhat2 <- predict (hmm,test1form$x)
#plot(yhat1)
#plot(yhat2)
hmm$loglik[length(hmm$loglik)]
k=11
#init probabilities
init <- rep(1/k, k)
#transition matrix
P <- matrix(rep(1/k, k*k), nrow = k)
#emission matrix:  here I used a Gaussian distribution, replace muEst and sigmaEst by your initial estimates of mean and variance
muVec <- c(1:k)
sigmaVec <- c(1:k)
muVec <- c(0.5484832, 0.3271606, 0.2719592, 3.1713822, 1.2757978, 1.8831006, 0.8581603, 2.4676883, 0.5519891, 1.5377176, 4.7048570)
sigmaVec <- c(0.0008257707, 0.0202114701, 0.0029434861, 0.3858464933, 0.0210970072, 0.0460559523, 0.0741345796, 0.0252060821, 0.4619841991,
0.0251711090, 1.0975356331)
b <- list(mu = muVec, sigma = sigmaVec)
#starting model for EM
startmodel <- hmmspec(init = init, trans = P, parms.emis = b, dens.emis = dnorm.hsmm)
startmodel
#EM algorithm fits an HMM to the data
hmm <- hmmfit(traindayform$x, startmodel, mstep = mstep.norm,maxit = 200, tol=1e-02)
#print resulting HMM parameters
summary(hmm)
plot(hmm$loglik, type="b", ylab="log-likelihood", xlab="Iteration")
#yhat1 <- predict (hmm,traindayform$x)
#yhat2 <- predict (hmm,test1form$x)
#plot(yhat1)
#plot(yhat2)
hmm$loglik[length(hmm$loglik)]
k=13
#init probabilities
init <- rep(1/k, k)
#transition matrix
P <- matrix(rep(1/k, k*k), nrow = k)
#emission matrix:  here I used a Gaussian distribution, replace muEst and sigmaEst by your initial estimates of mean and variance
muVec <- c(1:k)
sigmaVec <- c(1:k)
muVec <- c(0.5484832, 0.3271606, 0.2719592, 3.1713822, 1.2757978, 1.8831006, 0.8581603, 2.4676883, 0.5519891, 1.8237814, 1.5377176, 4.7048570,
0.9816549)
sigmaVec <- c(0.0008257707, 0.0202114701, 0.0029434861, 0.3858464933, 0.0210970072, 0.0460559523, 0.1301456018, 0.0741345796, 0.0252060821,
0.4619841991, 0.0251711090, 1.0975356331, 0.1535219979)
b <- list(mu = muVec, sigma = sigmaVec)
#starting model for EM
startmodel <- hmmspec(init = init, trans = P, parms.emis = b, dens.emis = dnorm.hsmm)
startmodel
#EM algorithm fits an HMM to the data
hmm_13 <- hmmfit(traindayform$x, startmodel, mstep = mstep.norm,maxit = 200, tol=1e-02)
#print resulting HMM parameters
summary(hmm_13)
plot(hmm_13$loglik, type="b", ylab="log-likelihood", xlab="Iteration")
#yhat1 <- predict (hmm_13,traindayform$x)
#yhat2 <- predict (hmm_13,test1form$x)
#plot(yhat1)
#plot(yhat2)
hmm_13$loglik[length(hmm_13$loglik)]
muVec <- c(0.5484832, 0.3271606, 0.2719592, 3.1713822, 1.2757978, 1.8831006, 0.8581603, 2.4676883, 0.5519891, 1.8237814, 1.5377176, 4.7048570,
0.9816549)
sigmaVec <- c(0.0008257707, 0.0202114701, 0.0029434861, 0.3858464933, 0.0210970072, 0.0460559523, 0.1301456018, 0.0741345796, 0.0252060821,
0.4619841991, 0.0251711090, 1.0975356331, 0.1535219979)
muVec[13] <- muVec[13] * 0.15
sigmaVec[13] <- sigmaVec[13] * 0.15
b <- list(mu = muVec, sigma = sigmaVec)
#starting model for EM
startmodel <- hmmspec(init = init, trans = P, parms.emis = b, dens.emis = dnorm.hsmm)
startmodel
#EM algorithm fits an HMM to the data
hmm_13 <- hmmfit(traindayform$x, startmodel, mstep = mstep.norm,maxit = 200, tol=1e-02)
#print resulting HMM parameters
summary(hmm_13)
plot(hmm_13$loglik, type="b", ylab="log-likelihood", xlab="Iteration")
#yhat1 <- predict (hmm_13,traindayform$x)
#yhat2 <- predict (hmm_13,test1form$x)
#plot(yhat1)
#plot(yhat2)
hmm_13$loglik[length(hmm_13$loglik)]
library(RCurl)
#Get URL's from GitHub for train and test data
trainURL <- getURL("https://raw.githubusercontent.com/CMPT-318/Cybersecurity-Project/master/Data/Train/train.txt")
test1URL <- getURL("https://raw.githubusercontent.com/CMPT-318/Cybersecurity-Project/master/Data/Test/test1.txt")
test2URL <- getURL("https://raw.githubusercontent.com/CMPT-318/Cybersecurity-Project/master/Data/Test/test2.txt")
#Load csv data into tables
trainFull <- read.table(text = trainURL, sep = ",", header = TRUE)
test1Full <- read.table(text = test1URL, sep = ",", header = TRUE)
test2Full <- read.table(text = test2URL, sep = ",", header = TRUE)
rm(trainURL)
rm(test1URL)
rm(test2URL)
library(zoo)
library(xts)
library(dplyr)
library(ggplot2)
library(lubridate)
apply.hourly <- function(x, FUN,...) {
ep <- endpoints(x, 'hours')
period.apply(x, ep, FUN, ...)
}
train <- trainFull[, c(1,3)]
colnames(train) <- c("DateTime", "Global_active_power")
train$DateTime <- paste(trainFull$Date, trainFull$Time)
train$DateTime <- as.POSIXct(train$DateTime, format='%d/%m/%Y %H:%M:%S')
train <- na.omit(train)
trainTS <- xts(train$Global_active_power, order.by = train$DateTime)
minutes <- fortify(trainTS)
hourly <- fortify(apply.hourly(trainTS,mean))
daily <- fortify(apply.daily(trainTS,mean))
monthly <- fortify(apply.monthly(trainTS,mean))
colnames(minutes) <- c("Date", "Global_active_power")
colnames(hourly) <- c("Date", "Global_active_power")
colnames(daily) <- c("Date", "Global_active_power")
colnames(monthly) <- c("Date", "Global_active_power")
dailyts <- ts(train$Global_active_power, start=1, frequency = 365)
components.ts = decompose(dailyts)
x=1:1556240
par(mfrow=c(4,1))
plot(x,dailyts,type="l", ylab="Daily Time series")
plot(x,components.ts$seasonal,type="l",col="blue", ylab="Seasonality")
plot(x,components.ts$trend,type="l", col="green", ylab="Trend")
plot(x,components.ts$random,type="l", col="red", ylab="Random")
overallTrend <- c(1:3)
View(minutes)
overallTrend[1] <- mean(with(minutes, minutes[year(Date) == 2007, ]), na.rm = TRUE)
tmp <- with(minutes, minutes[year(Date) == 2007, ])
View(tmp)
overallTrend[1] <- mean(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[year(Date) == 2007, ])
overallTrend[1] <- mean(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[year(Date) == 2008, ])
overallTrend[2] <- mean(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[year(Date) == 2009, ])
overallTrend[2] <- mean(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[year(Date) == 2007, ])
overallTrend[1] <- mean(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[year(Date) == 2008, ])
overallTrend[2] <- mean(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[year(Date) == 2009, ])
overallTrend[3] <- mean(tmp$Global_active_power, na.rm = TRUE)
x <- c(2007, 2008, 2009)
df <- cbind(x, overallTrend)
View(df)
df <- as.data.frame(cbind(x, overallTrend))
View(df)
plot(df, xlab="Year", ylab="Average Global Active Power (kW)")
df <- as.data.frame(cbind(x, overallTrend))
plot(df, xlab="Year", ylab="Average Global Active Power (kW)")
lines(df)
overallTrend[3] <- mean(tmp$Global_active_power, na.rm = TRUE)
x <- c(2007, 2008, 2009)
df <- as.data.frame(cbind(x, overallTrend))
plot(x, overallTrend, xlab="Year", ylab="Average Global Active Power (kW)", col="red")
lines(x, overallTrend, col="red")
x <- c(2007, 2008, 2009)
df <- as.data.frame(cbind(x, overallTrend))
plot(x, overallTrend, xlab="Year", ylab="Average Global Active Power (kW)", col="red", xaxt="n")
lines(x, overallTrend, col="red")
at <- seq(from = 0, to = max(df$x), by = 1)
axis(side = 1, at = at)
x <- c(2007, 2008, 2009)
df <- as.data.frame(cbind(x, overallTrend))
plot(df, xlab="Year", ylab="Average Global Active Power (kW)", col="red", xaxt="n")
lines(df, col="red")
at <- seq(from = 0, to = max(df$x), by = 1)
axis(side = 1, at = at)
overallTrend <- c(1:3)
tmp <- with(minutes, minutes[year(Date) == 2007, ])
overallTrend[1] <- mean(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[year(Date) == 2008, ])
overallTrend[2] <- mean(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[year(Date) == 2009, ])
overallTrend[3] <- mean(tmp$Global_active_power, na.rm = TRUE)
janTrend <- c(1:3)
tmp <- with(minutes, minutes[year(Date) == 2007 & month(Date) == 1, ])
janTrend[1] <- mean(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[year(Date) == 2008 & month(Date) == 1, ])
janTrend[2] <- mean(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[year(Date) == 2009 & month(Date) == 1, ])
janTrend[3] <- mean(tmp$Global_active_power, na.rm = TRUE)
julyTrend <- c(1:3)
tmp <- with(minutes, minutes[year(Date) == 2007 & month(Date) == 7, ])
julyTrend[1] <- mean(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[year(Date) == 2007 & month(Date) == 7, ])
julyTrend[2] <- mean(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[year(Date) == 2007 & month(Date) == 7, ])
julyTrend[3] <- mean(tmp$Global_active_power, na.rm = TRUE)
x <- c(2007, 2008, 2009)
df <- as.data.frame(cbind(x, overallTrend, janTrend, julyTrend))
plot(df, xlab="Year", ylab="Average Global Active Power (kW)", col="red", xaxt="n")
lines(df, col="red")
at <- seq(from = 0, to = max(df$x), by = 1)
axis(side = 1, at = at)
dayHourlyAverage <- with( hourly , hourly[ hour( Date ) >= 8 & hour( Date ) < 20, ] )
dayHourlyAverage <- dayHourlyAverage %>% filter(Date >= '2007-01-01 00:59:00' & Date <= '2007-12-31 23:59:00')
dayHourlyAverage <- aggregate.data.frame(x=dayHourlyAverage$Global_active_power,
by = list(Date = substr(dayHourlyAverage$Date, 1, 10)),
FUN=mean)
nightHourlyAverage <- with( hourly , hourly[ hour( Date ) < 8 | hour( Date ) >= 20, ] )
nightHourlyAverage <- nightHourlyAverage %>% filter(Date >= '2007-01-01 00:59:00' & Date <= '2007-12-31 23:59:00')
nightHourlyAverage <- aggregate.data.frame(x=nightHourlyAverage$Global_active_power,
by = list(Date = substr(nightHourlyAverage$Date, 1, 10)),
FUN=mean)
total <- merge(x = dayHourlyAverage, y = nightHourlyAverage, by = "Date", all.x = TRUE)
colnames(total) <- c("Date", "Day", "Night")
total$Date <- as.POSIXct(paste(as.character(total$Date), "21:01:00"), format="%Y-%m-%d %H:%M:%S")
z <- read.zoo(total, header = TRUE)
plot(z, xaxt="n", ylab="Average Global Active Power (kW)", xlab="Date", col=c("red", "green"), plot.type = "single")
axis(1, total$Date, format(as.Date(total$Date), "%b %y"),  cex.axis = .7)
legend('topright', names(total)[-1] ,lty=1, col=c("red","green"), bty='n', cex=.75)
plot(x, overallTrend, xlab="Year", ylab="Average Global Active Power (kW)", col="red", xaxt="n")
lines(x, overallTrend, col="red")
points(x, janTrend, col="green")
points(x, janTrend, col="green")
lines(x, janTrend, col="green")
View(df)
ggplot(df, aes(x)) +
geom_line(aes(y=overallTrend), colour="red") +
geom_line(aes(y=janTrend), colour="green")
at <- seq(from = 0, to = max(df$x), by = 1)
axis(side = 1, at = at)
g <- ggplot(df, aes(x)) + geom_line(aes(y=overallTrend), colour="red") + geom_line(aes(y=janTrend), colour="green")
g + scale_x_discrete(name ="Year", limits=c("2007","2008","2009"))
g + scale_x_discrete(name ="Year", limits=c("2007", "2009"))
g <- ggplot(df, aes(x)) + geom_line(aes(y=overallTrend), colour="red") + geom_line(aes(y=janTrend), colour="green")
g <- ggplot(df, aes(x)) + geom_line(aes(y=overallTrend), colour="red") + geom_line(aes(y=janTrend), colour="green")
ggplot(df, aes(x)) + geom_line(aes(y=overallTrend), colour="red") + geom_line(aes(y=janTrend), colour="green")
ggplot(df, aes(x)) + geom_line(aes(y=overallTrend), colour="red") + geom_line(aes(y=janTrend), colour="green")
+ scale_x_discrete(name ="Year", limits=c("2007", "2009"))
ggplot(df, aes(x)) + geom_line(aes(y=overallTrend), colour="red") + geom_line(aes(y=janTrend), colour="green")
+ scale_x_discrete(name ="Year", limits=c("2007", "2008", "2009"))
ggplot(df, aes(x)) + geom_line(aes(y=overallTrend), colour="red") + geom_line(aes(y=janTrend), colour="green")
+ scale_x_continuous(name="Year", limits=c(2007, 2009))
ggplot(df, aes(x)) + geom_line(aes(y=overallTrend), colour="red") + geom_line(aes(y=janTrend), colour="green")
+ scale_x_continuous(name="Year", limits=c(2007, 2009))
g <- g + scale_x_continuous(name="Year", limits=c(2007, 2009))
g
g <- ggplot(df, aes(x)) + geom_line(aes(y=overallTrend), colour="red") + geom_line(aes(y=janTrend), colour="green")
g <- g + scale_x_continuous(name="Year", breaks=seq(2007,2009,1000))
g
g <- ggplot(df, aes(x)) + geom_line(aes(y=overallTrend), colour="red") + geom_line(aes(y=janTrend), colour="green")
g <- g + scale_x_continuous(name="Year", breaks=seq(2007,2009,1))
g
g <- ggplot(df, aes(x)) + geom_line(aes(y=overallTrend), colour="red") + geom_point(df)
g <- g + geom_line(aes(y=janTrend), colour="green")
g <- g + scale_x_continuous(name="Year", breaks=seq(2007,2009,1))
g
g <- ggplot(df, aes(x)) + geom_line(aes(y=overallTrend), colour="red") + geom_point(df)
g <- g + geom_line(aes(y=janTrend), colour="green")
g <- g + scale_x_continuous(name="Year", breaks=seq(2007,2009,1))
g
plot(x, overallTrend, xlab="Year", ylab="Average Global Active Power (kW)", col="red", xaxt="n")
lines(x, overallTrend, col="red")
points(x, janTrend, col="green")
lines(x, janTrend, col="green")
plot(x, overallTrend, xlab="Year", ylab="Average Global Active Power (kW)", col="red", xaxt="n")
points(x, janTrend, col="green")
plot(x, overallTrend, xlab="Year", ylab="Average Global Active Power (kW)", col="red", xaxt="n", type ="o")
plot(x, overallTrend, xlab="Year", ylab="Average Global Active Power (kW)", col="red", xaxt="n", type ="o")
points(x, janTrend, col="green")
plot(x, overallTrend, xlab="Year", ylab="Average Global Active Power (kW)", col="red", xaxt="n", type ="o")
points(x, janTrend, col="green", pch=22)
plot(2007:2009, 0:2, type="n")
plot(2007:2009, 0:2, type="n", xlab="Year", ylab="Average Global Active Power (kW)", xaxt="n")
axis(side=1, at=at[2007, 2008, 2009])
plot(2007:2009, 0:2, type="n", xlab="Year", ylab="Average Global Active Power (kW)", xaxt="n")
axis(side=1, at=c(2007, 2008, 2009))
plot(2007:2009, 0:2, type="n", xlab="Year", ylab="Average Global Active Power (kW)", xaxt="n")
axis(side=1, at=c(2007, 2008, 2009))
points(x, overallTrend, col="red")
plot(2007:2009, 1:1.75, type="n", xlab="Year", ylab="Average Global Active Power (kW)", xaxt="n")
axis(side=1, at=c(2007, 2008, 2009))
points(x, overallTrend, col="red")
lines(x, overallTrend, col="red")
plot(2007:2009, 1:1.75, type="n", xlab="Year", ylab="Average Global Active Power (kW)", xaxt="n")
axis(side=1, at=c(2007, 2008, 2009))
points(x, overallTrend, col="red")
lines(x, overallTrend, col="red")
plot(2007:2009, 1:2, type="n", xlab="Year", ylab="Average Global Active Power (kW)", xaxt="n")
axis(side=1, at=c(2007, 2008, 2009))
points(x, overallTrend, col="red")
lines(x, overallTrend, col="red")
1:1.75
seq(2007,2009,0.5)
seq(1,1.8,0.2)
plot(seq(2007,2009,0.5), seq(1,1.8,0.2), type="n", xlab="Year", ylab="Average Global Active Power (kW)", xaxt="n")
axis(side=1, at=c(2007, 2008, 2009))
points(x, overallTrend, col="red")
lines(x, overallTrend, col="red")
points(x, janTrend, col="green")
plot(seq(2007,2009,0.5), seq(1,1.8,0.2), type="n", xlab="Year", ylab="Average Global Active Power (kW)", xaxt="n")
axis(side=1, at=c(2007, 2008, 2009))
points(x, overallTrend, col="red")
points(x, janTrend, col="green")
plot(seq(2007,2009,0.5), seq(1,1.8,0.2), type="n", xlab="Year", ylab="Average Global Active Power (kW)", xaxt="n")
axis(side=1, at=c(2007, 2008, 2009))
points(x, overallTrend, col="red")
points(x, janTrend, col="green", pch=22)
plot(seq(2007,2009,0.5), seq(1,1.8,0.2), type="n", xlab="Year", ylab="Average Global Active Power (kW)", xaxt="n")
axis(side=1, at=c(2007, 2008, 2009))
points(x, overallTrend, col="red")
points(x, janTrend, col="green", pch=22)
points(x, julyTrend, col="blue", pch=23)
overallTrend <- c(1:3)
tmp <- with(minutes, minutes[year(Date) == 2007, ])
overallTrend[1] <- mean(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[year(Date) == 2008, ])
overallTrend[2] <- mean(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[year(Date) == 2009, ])
overallTrend[3] <- mean(tmp$Global_active_power, na.rm = TRUE)
janTrend <- c(1:3)
tmp <- with(minutes, minutes[year(Date) == 2007 & month(Date) == 1, ])
janTrend[1] <- mean(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[year(Date) == 2008 & month(Date) == 1, ])
janTrend[2] <- mean(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[year(Date) == 2009 & month(Date) == 1, ])
janTrend[3] <- mean(tmp$Global_active_power, na.rm = TRUE)
julyTrend <- c(1:3)
tmp <- with(minutes, minutes[year(Date) == 2007 & month(Date) == 7, ])
julyTrend[1] <- mean(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[year(Date) == 2008 & month(Date) == 7, ])
julyTrend[2] <- mean(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[year(Date) == 2009 & month(Date) == 7, ])
julyTrend[3] <- mean(tmp$Global_active_power, na.rm = TRUE)
plot(seq(2007,2009,0.5), seq(0.7,1.9,0.3), type="n", xlab="Year", ylab="Average Global Active Power (kW)", xaxt="n")
axis(side=1, at=c(2007, 2008, 2009))
points(x, overallTrend, col="red")
points(x, janTrend, col="green", pch=22)
points(x, julyTrend, col="blue", pch=23)
plot(seq(2007,2009,0.5), seq(0.7,1.9,0.3), type="n", xlab="Year", ylab="Average Global Active Power (kW)", xaxt="n")
axis(side=1, at=c(2007, 2008, 2009))
points(x, overallTrend, col="red")
points(x, janTrend, col="green", pch=22)
points(x, julyTrend, col="blue", pch=24)
plot(seq(2007,2009,0.5), seq(0.7,1.9,0.3), type="n", xlab="Year", ylab="Average Global Active Power (kW)", xaxt="n")
axis(side=1, at=c(2007, 2008, 2009))
points(x, overallTrend, col="red")
points(x, janTrend, col="green", pch=22)
points(x, julyTrend, col="blue", pch=24)
lines(x, overallTrend, col="red")
lines(x, janTrend, col="green")
lines(x, julyTrend, col="blue")
plot(seq(2007,2009,0.5), seq(0.7,1.9,0.3), type="n", xlab="Year", ylab="Average Global Active Power (kW)", xaxt="n")
axis(side=1, at=c(2007, 2008, 2009))
legend('topright', c("Overall Trend", "Trend of January", "Trend of July") , lty=1, col=c("red","green", "blue"), bty='n', cex=.75)
points(x, overallTrend, col="red")
points(x, janTrend, col="green", pch=22)
points(x, julyTrend, col="blue", pch=24)
lines(x, overallTrend, col="red")
lines(x, janTrend, col="green")
lines(x, julyTrend, col="blue")
plot(seq(2007,2009,0.5), seq(0.7,1.9,0.3), type="n", xlab="Year", ylab="Global Active Power (kW)", xaxt="n")
axis(side=1, at=c(2007, 2008, 2009))
legend('topright', c("Overall Trend", "Trend of January", "Trend of July") , lty=1, col=c("red","green", "blue"), bty='n', cex=.75)
points(x, overallTrend, col="red")
points(x, janTrend, col="green", pch=22)
points(x, julyTrend, col="blue", pch=24)
lines(x, overallTrend, col="red")
lines(x, janTrend, col="green")
lines(x, julyTrend, col="blue")
tmp <- with(minutes, minutes[year(Date) == 2007 & (month(Date) <= 2 | month(Date) >= 11), ])
View(tmp)
sfTrend <- c(1:3)
tmp <- with(minutes, minutes[year(Date) == 2007 & ((month(Date) >= 3 & month(Date) <= 4) | (month(Date) >= 9 & month(Date) <= 10)), ])
View(tmp)
winterTrend <- c(1:3)
tmp <- with(minutes, minutes[year(Date) == 2007 & (month(Date) <= 2 | month(Date) >= 11), ])
winterTrend[1] <- mean(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[year(Date) == 2008 & (month(Date) <= 2 | month(Date) >= 11), ])
winterTrend[2] <- mean(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[year(Date) == 2009 & (month(Date) <= 2 | month(Date) >= 11), ])
winterTrend[3] <- mean(tmp$Global_active_power, na.rm = TRUE)
summerTrend <- c(1:3)
tmp <- with(minutes, minutes[year(Date) == 2007 & month(Date) >=5 & month(Date) <= 8, ])
summerTrend[1] <- mean(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[year(Date) == 2008 & month(Date) >=5 & month(Date) <= 8, ])
summerTrend[2] <- mean(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[year(Date) == 2009 & month(Date) >=5 & month(Date) <= 8, ])
summerTrend[3] <- mean(tmp$Global_active_power, na.rm = TRUE)
sfTrend <- c(1:3)
tmp <- with(minutes, minutes[year(Date) == 2007 & ((month(Date) >= 3 & month(Date) <= 4) | (month(Date) >= 9 & month(Date) <= 10)), ])
sfTrend[1] <- mean(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[year(Date) == 2008 & ((month(Date) >= 3 & month(Date) <= 4) | (month(Date) >= 9 & month(Date) <= 10)), ])
sfTrend[2] <- mean(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[year(Date) == 2008 & ((month(Date) >= 3 & month(Date) <= 4) | (month(Date) >= 9 & month(Date) <= 10)), ])
sfTrend[3] <- mean(tmp$Global_active_power, na.rm = TRUE)
plot(seq(2007,2009,0.5), seq(0.7,1.9,0.3), type="n", xlab="Year", ylab="Global Active Power (kW)", xaxt="n")
axis(side=1, at=c(2007, 2008, 2009))
legend('topright', c("Overall Trend", "Trend of Winter", "Trend of Summer", "Trend of Spring/Fall"),
lty=1, col=c("red","green", "blue"), bty='n', cex=.75)
points(x, overallTrend)
points(x, winterTrend, col="green", pch=22)
points(x, summerTrend, col="blue", pch=24)
points(x, sfTrend, col="red", pch=3)
lines(x, overallTrend)
lines(x, winterTrend, col="green")
lines(x, summerTrend, col="blue")
lines(x, sfTrend, col="red")
plot(seq(2007,2009,0.5), seq(0.7,1.9,0.3), type="n", xlab="Year", ylab="Global Active Power (kW)", xaxt="n")
axis(side=1, at=c(2007, 2008, 2009))
legend('topright', c("Overall Trend", "Trend of Winter", "Trend of Summer", "Trend of Spring/Fall"),
lty=1, col=c("red","green", "blue"), bty='n', cex=.75)
points(x, overallTrend)
points(x, winterTrend, col="green", pch=22)
points(x, summerTrend, col="blue", pch=24)
points(x, sfTrend, col="red", pch=3)
lines(x, overallTrend)
lines(x, winterTrend, col="green")
lines(x, summerTrend, col="blue")
lines(x, sfTrend, col="red")
plot(seq(2007,2009,0.5), seq(0.7,1.9,0.3), type="n", xlab="Year", ylab="Global Active Power (kW)", xaxt="n")
axis(side=1, at=c(2007, 2008, 2009))
legend('topright', c("Overall Trend", "Trend of Winter", "Trend of Summer", "Trend of Spring/Fall"),
lty=1, col=c("black", "red","green", "blue"), bty='n', cex=.75)
points(x, overallTrend)
points(x, winterTrend, col="green", pch=22)
points(x, summerTrend, col="blue", pch=24)
points(x, sfTrend, col="red", pch=3)
lines(x, overallTrend)
lines(x, winterTrend, col="green")
lines(x, summerTrend, col="blue")
lines(x, sfTrend, col="red")
plot(seq(2007,2009,0.5), seq(0.7,1.9,0.3), type="n", xlab="Year", ylab="Global Active Power (kW)", xaxt="n")
axis(side=1, at=c(2007, 2008, 2009))
legend('topright', c("Overall Trend", "Trend of Winter", "Trend of Summer", "Trend of Spring/Fall"),
lty=1, col=c("black", "green","blue", "red"), bty='n', cex=.75)
points(x, overallTrend)
points(x, winterTrend, col="green", pch=22)
points(x, summerTrend, col="blue", pch=24)
points(x, sfTrend, col="red", pch=3)
lines(x, overallTrend)
lines(x, winterTrend, col="green")
lines(x, summerTrend, col="blue")
lines(x, sfTrend, col="red")
sfTrend <- c(1:3)
tmp <- with(minutes, minutes[year(Date) == 2007 & ((month(Date) >= 3 & month(Date) <= 4) | (month(Date) >= 9 & month(Date) <= 10)), ])
sfTrend[1] <- mean(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[year(Date) == 2008 & ((month(Date) >= 3 & month(Date) <= 4) | (month(Date) >= 9 & month(Date) <= 10)), ])
sfTrend[2] <- mean(tmp$Global_active_power, na.rm = TRUE)
tmp <- with(minutes, minutes[year(Date) == 2009 & ((month(Date) >= 3 & month(Date) <= 4) | (month(Date) >= 9 & month(Date) <= 10)), ])
sfTrend[3] <- mean(tmp$Global_active_power, na.rm = TRUE)
sfTrend
plot(seq(2007,2009,0.5), seq(0.7,1.9,0.3), type="n", xlab="Year", ylab="Global Active Power (kW)", xaxt="n")
axis(side=1, at=c(2007, 2008, 2009))
legend('topright', c("Overall Trend", "Trend of Winter", "Trend of Summer", "Trend of Spring/Fall"),
lty=1, col=c("black", "green","blue", "red"), bty='n', cex=.75)
points(x, overallTrend)
points(x, winterTrend, col="green", pch=22)
points(x, summerTrend, col="blue", pch=24)
points(x, sfTrend, col="red", pch=3)
lines(x, overallTrend)
lines(x, winterTrend, col="green")
lines(x, summerTrend, col="blue")
lines(x, sfTrend, col="red")
